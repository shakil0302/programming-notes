Suffix Array
Suffix array is a data structure for string. In this structure we
build an array of integer sa[] which holds the starting position of all
the suffixes of a particular string in lexicographically sorted order.
It has a very remarkable property. if i < j < k, then, sa[i] and sa[j] will have
at least equal match as sa[i] and sa[k] if not better match. Also it hold for
sa[j] and sa[k]. Why it works? Remeber, it is lexicographically sorted.

str = "ababa"
sa = [4, 2, 0, 3, 1]

Longest Common Prefix
It is an procedure which takes two integer, i and j, which denotes the
starting position of two suffixes. This computes the length of the longest matched
string started from the first character.

lcp(0, 2) = 3
as 0 = ababa and 2 = aba and the longest match is aba
lcp(0, 1) = 0 as the first character differs.

Using these two tools, we can solved various string problem which we will discuss
shortly.

The naive approach of building suffix array takes O(n^2 log n) time. And the naive approach
of calculating lcp takes O(n) time. But using Sparse Table, we can do the building in O(n log n)
and calculate the lcp in O(log n) time.

The trick is to find an ordering relation for 2^0, 2^1, 2^2, ..., 2^log n length. This way, we can
find which suffix is lexicographically smaller than others. Also, we can find the lcp from 
this in O(log n) time.

Problem: http://lightoj.com/volume_showproblem.php?problem=1428
Submission: http://lightoj.com/volume_showcode.php?sub_id=957735

Using Suffix Array we can find many answer regarding the string. Just remember the property of
sa and lcp. Here we will survery most basic ones.