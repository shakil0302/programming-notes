Problem:
Given an array 'arr' of size 'N' and Q queries of the form 'L R',
We have to answer these query by computing some a value of f([L, R])
from the array 'arr'.

This problem can be solved using MO's algorithm if 'f' has the following
property: From f([L, R]), we can compute f([L-1, R]), f([L+1, R]),
f([L, R-1]), f([L, R+1]) easily.

Rearrange all the queries in the MO's order.
MO's order:
[L1, R1] precedes [L2, R2] if 
1. L1/BLOCK_SIZE < L2/BLOCK_SIZE
2. L1/BLOCK_SIZE == L2/BLOCK_SIZE && R1 < R2
where BLOCK_SIZE = sqrt(N);

Now, Computing the queries in this order will take O(Q sqrt(N)*O(f)) time.

Calculation:
1. Mantain a segment [mo_left, mo_right], initially [0, -1]
2. Set res = initial_result
3. For each query [L, R],
4.     move mo_right towards R, one step at a time, update res at each step.
5.     move mo_left towards L, one step at a time, update res at each step.
6.     store res for this segment, we have to print it in the order of input.
7. Now, print answer all the query in the order of their input.

http://codeforces.com/contest/220/problem/B
http://codeforces.com/contest/220/submission/24871758